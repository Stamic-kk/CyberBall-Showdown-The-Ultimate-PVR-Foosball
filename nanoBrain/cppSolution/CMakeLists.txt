cmake_minimum_required(VERSION 3.5)

project(CyberBall)

find_package(vpi REQUIRED)
find_package(OpenCV REQUIRED)

file(GLOB source "src/*.cpp")

add_executable(${PROJECT_NAME}.out ${source})
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set_property(TARGET ${PROJECT_NAME}.out PROPERTY CXX_STANDARD 17)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/ ${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/uLAPack/src)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/uKal)
# # add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/uKal ${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/uLAPack)
target_include_directories(${PROJECT_NAME}.out PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_include_directories(${PROJECT_NAME}.out PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/uKal)
target_include_directories(${PROJECT_NAME}.out PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/uLAPack)
# # link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/uLAPack ${CMAKE_CURRENT_SOURCE_DIR}/uKal)
# target_include_directories(${PROJECT_NAME}.out PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/ ${CMAKE_CURRENT_SOURCE_DIR}/uKal/src/uLAPack/src)

# find_library(UKAL_LIB uKal ${CMAKE_CURRENT_SOURCE_DIR}/uKal)
# message(STATUS "UKAL_LIB: ${UKAL_LIB}")
# #target_link_libraries(${PROJECT_NAME}.out vpi opencv_core opencv_imgproc opencv_imgcodecs opencv_videoio stdc++fs)
# # add_definitions(-ULAPACK_USE_STATIC_ALLOC)
# add_definitions(-DUKAL_MAX_STATE_VECTOR_SIZE=5 -DUKAL_MAX_MEASUREMENT_VECTOR_SIZE=5 
# -DULAPACK_MATRIX_ENTRY_TYPE=double -DULAPACK_INDEX_TYPE=uint64_t 
# -DULAPACK_SIGNED_INDEX_TYPE=int64_t -DULAPACK_USE_STATIC_ALLOC=1 
# -DULAPACK_MAX_MATRIX_N_ROWS=5 -DULAPACK_MAX_MATRIX_N_COLS=5 
# -DULAPACK_INITIALIZE_MEMORY=1 -DULAPACK_INVERSE_VIA_LU=1 -DULAPACK_MINIMUM_THRESHOLD_TOLERANCE=.0001)
target_compile_definitions(${PROJECT_NAME}.out PUBLIC   
-DUKAL_MAX_STATE_VECTOR_SIZE=5 -DUKAL_MAX_MEASUREMENT_VECTOR_SIZE=5 
-DULAPACK_MATRIX_ENTRY_TYPE=double -DULAPACK_INDEX_TYPE=uint64_t 
-DULAPACK_SIGNED_INDEX_TYPE=int64_t -DULAPACK_USE_STATIC_ALLOC=1 
-DULAPACK_MAX_MATRIX_N_ROWS=5 -DULAPACK_MAX_MATRIX_N_COLS=5 
-DULAPACK_INITIALIZE_MEMORY=1 -DULAPACK_INVERSE_VIA_LU=1 -DULAPACK_MINIMUM_THRESHOLD_TOLERANCE=.0001)
target_link_libraries(${PROJECT_NAME}.out vpi ${OpenCV_LIBS}  stdc++fs uKal)

